module Main

// The function needed to be implemented when a type joins a group.
type GFunction
    // name      Token
    // signature FSignature

attach GFunction to FieldName
    #alwaysinline
    def name~(function GFunction) Token
        return function.typeGetItem(0)

    #alwaysinline
    def name`(write function GFunction, new <>Token) <>Token
        return function.typePut(0, new)

attach GFunction to FieldSignature
    #alwaysinline
    def signature~(function GFunction) FSignature
        return function.typeGetItem(1)

    #alwaysinline
    def signature`(write function GFunction, new <>FSignature) <>FSignature
        return function.typePut(1, new)

#alwaysinline
def gFunction(name Token, signature FSignature) GFunction
    return GFunction.fromList({name, signature})
